---
import {t} from "i18next"
import getLocalizedLinkToComicStrip from "@server/actions/GetLocalizedLinkToComicStrip"
import getStripNameParts from "@server/actions/GetStripNameParts"
import {RelatedPages} from "@server/Utils"

export interface Props {
	info: RelatedPages
}
const {info: {current, backward, forward}} = Astro.props
---
<nav class="sticky-bar" aria-label={t("landmarks.navigation-comic")}>
    <div class="navigation-arrows">
			{
				backward ? (
                <>
                    <a
                            href={getLocalizedLinkToComicStrip(backward.all)}
                            aria-label={t("secondary-nav.first")}
                            title={t("secondary-nav.first")}
                            data-astro-prefetch="viewport"
                    >
                        &lt;&lt;
                    </a>
                    <a href={getLocalizedLinkToComicStrip(backward.one)} aria-label={t("secondary-nav.previous")}
                       title={t("secondary-nav.previous")}>&lt;</a>
                </>
				) : (
                <>
                    <a href="javascript:void(0)" class="disabled" tabindex="-1" aria-hidden="true">&lt;&lt;</a>
                    <a href="javascript:void(0)" class="disabled" tabindex="-1" aria-hidden="true">&lt;</a>
                </>
				)
			}
    </div>
    <div class="text">
			{getStripNameParts(current).join(" | ")}
    </div>
    <div class="navigation-arrows">
			{
				forward ? (
                <>
                    <a
                            href={getLocalizedLinkToComicStrip(forward.one)}
                            aria-label={t("secondary-nav.next")}
                            title={t("secondary-nav.next")}
                            data-astro-prefetch="viewport"
                    >
                        &gt;
                    </a>
                    <a
                            href={getLocalizedLinkToComicStrip(forward.all)}
                            aria-label={t("secondary-nav.last")}
                            title={t("secondary-nav.last")}
                    >
                        &gt;&gt;
                    </a>
                </>
				) : (
                <>
                    <a href="javascript:void(0)" class="disabled" tabindex="-1" aria-hidden="true">&gt;</a>
                    <a href="javascript:void(0)" class="disabled" tabindex="-1" aria-hidden="true">&gt;&gt;</a>
                </>
				)
			}
    </div>
</nav>
<style>
    .sticky-bar {
        position: sticky;

        grid-area: sticky-bar;
        display: flex;
        justify-content: space-between;
        align-items: center;

        margin-inline: calc(5.5rem + var(--border-wide-width));
        justify-self: stretch;
        height: 3.75rem;


        background-color: var(--background-color-secondary);
        border: 1px solid #000000;
        box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.25);
        border-radius: 10px;

        padding: 0 4.5rem;

        font-family: var(--font-family-title);
        font-style: normal;
        font-weight: 400;
        font-size: 2rem;

        color: var(--color-text-comment);
        bottom: .75rem;
    }

    .navigation-arrows {
        display: flex;
        gap: 1.5rem;
    }

    a {
        display: flex;
        justify-content: center;

        color: var(--color-primary);
        font-size: 2.5rem;
        min-width: 2.25rem;

        transition: var(--transition-hover);
        transition-property: color;
    }

    a:hover {
        color: var(--color-hover);
    }

    .disabled {
        pointer-events: none;
        color: var(--color-disabled);
    }

    @media (max-width: 60em) {
        .sticky-bar {
            position: static;
            padding: 0 0.5rem;
            margin-inline: 0;
            height: 2.5rem;
        }

        .navigation-arrows {
            gap: .5rem;
        }

        .text {
            font-size: 1.25rem;
        }

        a {
            color: var(--color-primary);
            font-size: 2rem;
        }
    }
</style>
