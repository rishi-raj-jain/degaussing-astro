---
import { t } from "i18next"
import { localizePath } from "astro-i18next"
import getLocalizedLinkToComicStrip from "@server/actions/GetLocalizedLinkToComicStrip"
import getStripNameParts from "@server/actions/GetStripNameParts"

export interface Props { info: RelatedPages }
const {info: {current, backward, forward}} = Astro.props
---
<nav class="sticky-bar" aria-label={t("landmarks.navigation-comic")}>
	<div class="navigation-arrows">
		{
			backward ? (
				<>
					<a href={getLocalizedLinkToComicStrip(backward.all)}>&lt;&lt;</a>
					<a href={getLocalizedLinkToComicStrip(backward.one)}>&lt;</a>
				</>
			) : (
				<>
					<a href="javascript:void(0)" class="disabled" tabindex="-1">&lt;&lt;</a>
					<a href="javascript:void(0)" class="disabled" tabindex="-1">&lt;</a>
				</>
			)
		}
	</div>
	<div class="text">
		{getStripNameParts(current).join(" | ")}
	</div>
	<div class="navigation-arrows">
		{
			forward ? (
				<>
					<a href={getLocalizedLinkToComicStrip(forward.one)}>&gt;</a>
					<a href={getLocalizedLinkToComicStrip(forward.all)}>&gt;&gt;</a>
				</>
			) : (
				<>
					<a href="javascript:void(0)" class="disabled" tabindex="-1">&gt;</a>
					<a href="javascript:void(0)" class="disabled" tabindex="-1">&gt;&gt;</a>
				</>
			)
		}
	</div>
</nav>
<style>
	.sticky-bar {
		position: sticky;

		grid-area: sticky-bar;
		display: flex;
		justify-content: space-between;
		align-items: center;

		width: 656px;
		height: 59px;

		background-color: var(--background-color-secondary);
		border: 1px solid #000000;
		box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.25);
		border-radius: 10px;

		padding: 0 72px;

		font-family: var(--font-family-title);
		font-style: normal;
		font-weight: 400;
		font-size: 32px;
		line-height: 37px;

		color: var(--color-text-comment);
		bottom: 10px;

		justify-self: center;
	}

	.navigation-arrows {
		display: flex;
		gap: 24px;
	}

	a {
		display: flex;
		justify-content: center;

		color: var(--color-primary);
		font-size: 40px;
		min-width: 36px;

		transition: var(--transition-hover);
		transition-property: color;
	}

	a:hover {
		color: var(--color-hover);
	}

	.disabled {
		pointer-events: none;
		color: var(--color-disabled);
	}

	@media (max-width: 992px) {
		.sticky-bar {
			position: static;
			padding: 0 8px;
			width: 100%;
			height: 40px;
		}

		.navigation-arrows {
			gap: 8px;
		}

		.text {
			font-size: 20px;
		}

		a {
			color: var(--color-primary);
			font-size: 32px;
		}
	}
</style>
