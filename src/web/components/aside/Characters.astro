---
import i18next, { t } from "i18next"
import { getImage } from "@astrojs/image"
import { localizePath } from "astro-i18next"
import Aside from "@web/components/aside/Aside.astro"
import Title from "@web/components/aside/Title.astro"
import getCharactersInfo from "@server/actions/GetCharactersInfo"

const characters = await getCharactersInfo({ language: i18next.language })
for (const character of characters) {
	const { src } = await getImage({
		src: character.portrait,
		width: "111",
		height: "111",
		format: "avif"
	})
	character.portrait = src
}
---

<Aside grid-area="characters">
	<div class="container">
		<Title>{t("strip.characters")}</Title>
		<div class="links">
			{
				characters.map((character) => (
					<a href={localizePath("/characters") + `#${character.slug}`}>
						<img src={character.portrait} alt="" />
						<span>{character.name}</span>
					</a>
				))
			}
		</div>
	</div>
</Aside>
<style>
	a {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 7px;
		color: var(--color-text-aside);
	}

	img {
		width: 111px;
		height: 111px;
		aspect-ratio: 111/111;
		border-radius: 50%;
	}

	span {
		font-family: var(--font-family-text);
		font-size: 14px;
		line-height: 23px;
	}

	.container {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		flex-grow: 1;

		gap: 14px;
	}

	.links {
		display: flex;
		flex-direction: column;
		gap: 11px;
	}

	@media (max-width: 992px) {
		.links {
			flex-direction: row;
			justify-content: space-evenly;
		}

		img {
			width: 71px;
			height: 71px;
		}
	}
</style>
