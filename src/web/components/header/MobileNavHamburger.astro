---
import getMenuItems from "@server/actions/GetMenuItems"
const items = getMenuItems({path: Astro.url.pathname})
---
<div class="dropdown" id="hamburger-menu">
    <button id="hamburger-opener">
        <img src="/icons/hamburger.svg" alt=""/>
    </button>
    <dialog id="dropdown-list" inert>
        <button id="hamburger-closer">
            <img src="/icons/close.svg" alt=""/>
        </button>
        <ul>
            {items.map(item =>
            <li>
                <a
                    href={item.href}
                    class={item.selected ? "selected" : ""}
                >
                    <img src={item.icon} alt=""/>
                    <span>{item.text}</span>
                </a>
            </li>
            )}
        </ul>
    </dialog>
</div>
<script>
    const body = document.querySelector("body")
    const content = document.querySelector("#content-container")
	const opener = document.querySelector("#hamburger-opener");
	const closer = document.querySelector("#hamburger-closer");
	const dialog = document.querySelector("dialog");

    opener.addEventListener('click', () => {
        content.setAttribute("aria-hidden", "true")
        body.setAttribute("class", "no-scroll")//TODO this can be changed to a has() selector once fully supported
        dialog.removeAttribute("inert")
        dialog.showModal()
    });

    closer.addEventListener('click', () => {
        dialog.close();
    });

    dialog.addEventListener('close', () => {
        content.removeAttribute("aria-hidden")
        body.classList.remove("class", "no-scroll")
        dialog.setAttribute("inert", "")
    });
</script>
<style>
    .dropdown {
        display: none;
        flex-direction: column;

        position: absolute;
        left: 0;
        top: 0;

        border-bottom-right-radius: var(--border-radius);
    }

    dialog[open] {
        top: 0;
    }

    dialog:not([open]) {
        top: -100vh;
    }

    #dropdown-list {
        display: flex;
        position: absolute;
        background-color: var(--background-color-secondary);

        width: 100vw;
        height: 100vh;

        z-index: 50;
        transition: 0.50s ease-in-out;

        overflow-y: auto;
    }

    ul {
        display: flex;
        flex-direction: column;
        gap: 32px;
        padding-top: 96px;
        padding-left: 32px;

    }

    #hamburger-opener {
        padding: 16px;
    }

    #hamburger-closer {
        position: absolute;
        top: 8px;
        right: 8px;

        padding: 16px;
    }

    li > a {
        color: var(--color-primary);
        font-family: var(--font-family-title);
        font-size: 20px;
        display: flex;
        gap: 16px;
        align-items: center;

        padding: 16px;
    }

    li > a.selected {
        color: var(--color-selected);
    }

    li > a.selected > img {
        filter: var(--filter-image-hover);
    }

    img {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 24px;
        width: 24px;
    }

    @media (max-width: 992px) {
        .dropdown {
            display: flex;
        }
    }
</style>
